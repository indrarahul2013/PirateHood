{"ast":null,"code":"var _jsxFileName = \"/home/z3r0/react-material-dashboard/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'; // react-redux-firebase config\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  // Firestore for Profile instead of Realtime DB\n  attachAuthIsReady: true // attaches auth is ready promise to store\n\n};\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC_EF_SYBF2IB8_0_9tZaLI43FWasHicp8\",\n  authDomain: \"piratehood-3b4ac.firebaseapp.com\",\n  databaseURL: \"https://piratehood-3b4ac.firebaseio.com\",\n  projectId: \"piratehood-3b4ac\",\n  storageBucket: \"piratehood-3b4ac.appspot.com\",\n  messagingSenderId: \"891854251305\",\n  appId: \"1:891854251305:web:2244e74bbeecdcee124338\",\n  measurementId: \"G-J65BQ8PD8K\"\n};\nfirebase.initializeApp(firebaseConfig); // const store = createReduxStore()\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch // createFirestoreInstance // <- needed if using firestore\n\n};\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }\n})))), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/z3r0/react-material-dashboard/src/index.js"],"names":["React","ReactDOM","BrowserRouter","serviceWorker","App","Provider","store","ReactReduxFirebaseProvider","rrfConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","rrfProps","config","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,0BAAT,QAA2C,sBAA3C,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,OADG;AAEhBC,EAAAA,sBAAsB,EAAE,IAFR;AAEc;AAC9BC,EAAAA,iBAAiB,EAAE,IAHH,CAGS;;AAHT,CAAlB;AAMA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,kCAFS;AAGrBC,EAAAA,WAAW,EAAE,yCAHQ;AAIrBC,EAAAA,SAAS,EAAE,kBAJU;AAKrBC,EAAAA,aAAa,EAAE,8BALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB;AAWAC,QAAQ,CAACC,aAAT,CAAuBV,cAAvB,E,CAEA;;AAEA,MAAMW,QAAQ,GAAG;AACfF,EAAAA,QADe;AAEfG,EAAAA,MAAM,EAAEhB,SAFO;AAGfiB,EAAAA,QAAQ,EAAEnB,KAAK,CAACmB,QAHD,CAIf;;AAJe,CAAjB;AAOAxB,QAAQ,CAACyB,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEpB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,0BAAD,oBAAgCiB,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADA,CADF,CADF,EAQGI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARH;AAUAzB,aAAa,CAAC0B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n  attachAuthIsReady: true, // attaches auth is ready promise to store\n};\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC_EF_SYBF2IB8_0_9tZaLI43FWasHicp8\",\n  authDomain: \"piratehood-3b4ac.firebaseapp.com\",\n  databaseURL: \"https://piratehood-3b4ac.firebaseio.com\",\n  projectId: \"piratehood-3b4ac\",\n  storageBucket: \"piratehood-3b4ac.appspot.com\",\n  messagingSenderId: \"891854251305\",\n  appId: \"1:891854251305:web:2244e74bbeecdcee124338\",\n  measurementId: \"G-J65BQ8PD8K\"\n};\n\nfirebase.initializeApp(firebaseConfig)\n\n// const store = createReduxStore()\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  // createFirestoreInstance // <- needed if using firestore\n}\n\nReactDOM.render((\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    </ReactReduxFirebaseProvider>\n  </Provider>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}