{"ast":null,"code":"var _jsxFileName = \"/home/z3r0/react-material-dashboard/src/views/auth/RegisterView.js\";\nimport React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { connect, ReactReduxContext } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport { Formik } from 'formik';\nimport { Box, Button, Checkbox, Container, FormHelperText, Link, TextField, Typography, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RegisterView = ({\n  signUp\n}) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      firstName: '',\n      lastName: '',\n      password: '',\n      policy: false\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      firstName: Yup.string().max(255).required('First name is required'),\n      lastName: Yup.string().max(255).required('Last name is required'),\n      password: Yup.string().max(255).required('password is required'),\n      policy: Yup.boolean().oneOf([true], 'This field must be checked')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      console.log(values);\n      signUp(values);\n      setSubmitting(false);\n      navigate('/app/dashboard', {\n        replace: true\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, ({\n    errors,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    touched,\n    values\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }\n  }, \"Create new account\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }\n  }, \"Use your email to create new account\")), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.firstName && errors.firstName),\n    fullWidth: true,\n    helperText: touched.firstName && errors.firstName,\n    label: \"First name\",\n    margin: \"normal\",\n    name: \"firstName\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.firstName,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.lastName && errors.lastName),\n    fullWidth: true,\n    helperText: touched.lastName && errors.lastName,\n    label: \"Last name\",\n    margin: \"normal\",\n    name: \"lastName\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.lastName,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.email && errors.email),\n    fullWidth: true,\n    helperText: touched.email && errors.email,\n    label: \"Email Address\",\n    margin: \"normal\",\n    name: \"email\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    type: \"email\",\n    value: values.email,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(touched.password && errors.password),\n    fullWidth: true,\n    helperText: touched.password && errors.password,\n    label: \"Password\",\n    margin: \"normal\",\n    name: \"password\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    type: \"password\",\n    value: values.password,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    alignItems: \"center\",\n    display: \"flex\",\n    ml: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: values.policy,\n    name: \"policy\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 23\n    }\n  }, \"I have read the\", ' ', /*#__PURE__*/React.createElement(Link, {\n    color: \"primary\",\n    component: RouterLink,\n    to: \"#\",\n    underline: \"always\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, \"Terms and Conditions\"))), Boolean(touched.policy && errors.policy) && /*#__PURE__*/React.createElement(FormHelperText, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 23\n    }\n  }, errors.policy), /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    disabled: isSubmitting,\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 23\n    }\n  }, \"Sign up now\")), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, \"Have an account?\", ' ', /*#__PURE__*/React.createElement(Link, {\n    component: RouterLink,\n    to: \"/login\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 23\n    }\n  }, \"Sign in\")))))));\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  signUp: actions.SignUp\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterView); // export default RegisterView;","map":{"version":3,"sources":["/home/z3r0/react-material-dashboard/src/views/auth/RegisterView.js"],"names":["React","Link","RouterLink","useNavigate","Yup","connect","ReactReduxContext","actions","Formik","Box","Button","Checkbox","Container","FormHelperText","TextField","Typography","makeStyles","Page","useStyles","theme","root","backgroundColor","palette","background","dark","height","paddingBottom","spacing","paddingTop","RegisterView","signUp","classes","navigate","email","firstName","lastName","password","policy","object","shape","string","max","required","boolean","oneOf","values","setSubmitting","console","log","replace","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","mapStateToProps","state","mapDispatchToProps","SignUp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { connect, ReactReduxContext } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RegisterView = ({ signUp }) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  return (\n      <Page\n        className={classes.root}\n        title=\"Register\"\n      >\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          height=\"100%\"\n          justifyContent=\"center\"\n        >\n          <Container maxWidth=\"sm\">\n            <Formik\n              initialValues={{\n                email: '',\n                firstName: '',\n                lastName: '',\n                password: '',\n                policy: false\n              }}\n              validationSchema={\n                Yup.object().shape({\n                  email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                  firstName: Yup.string().max(255).required('First name is required'),\n                  lastName: Yup.string().max(255).required('Last name is required'),\n                  password: Yup.string().max(255).required('password is required'),\n                  policy: Yup.boolean().oneOf([true], 'This field must be checked')\n                })\n              }\n              onSubmit={(values, { setSubmitting }) => {\n                console.log(values);\n                signUp(values);\n                setSubmitting(false);\n                navigate('/app/dashboard', { replace: true });\n              }}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values\n              }) => (\n                  <form onSubmit={handleSubmit}>\n                    <Box mb={3}>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"h2\"\n                      >\n                        Create new account\n                  </Typography>\n                      <Typography\n                        color=\"textSecondary\"\n                        gutterBottom\n                        variant=\"body2\"\n                      >\n                        Use your email to create new account\n                  </Typography>\n                    </Box>\n                    <TextField\n                      error={Boolean(touched.firstName && errors.firstName)}\n                      fullWidth\n                      helperText={touched.firstName && errors.firstName}\n                      label=\"First name\"\n                      margin=\"normal\"\n                      name=\"firstName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.firstName}\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      error={Boolean(touched.lastName && errors.lastName)}\n                      fullWidth\n                      helperText={touched.lastName && errors.lastName}\n                      label=\"Last name\"\n                      margin=\"normal\"\n                      name=\"lastName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.lastName}\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      error={Boolean(touched.email && errors.email)}\n                      fullWidth\n                      helperText={touched.email && errors.email}\n                      label=\"Email Address\"\n                      margin=\"normal\"\n                      name=\"email\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      type=\"email\"\n                      value={values.email}\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      error={Boolean(touched.password && errors.password)}\n                      fullWidth\n                      helperText={touched.password && errors.password}\n                      label=\"Password\"\n                      margin=\"normal\"\n                      name=\"password\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      type=\"password\"\n                      value={values.password}\n                      variant=\"outlined\"\n                    />\n                    <Box\n                      alignItems=\"center\"\n                      display=\"flex\"\n                      ml={-1}\n                    >\n                      <Checkbox\n                        checked={values.policy}\n                        name=\"policy\"\n                        onChange={handleChange}\n                      />\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"body1\"\n                      >\n                        I have read the\n                    {' '}\n                        <Link\n                          color=\"primary\"\n                          component={RouterLink}\n                          to=\"#\"\n                          underline=\"always\"\n                          variant=\"h6\"\n                        >\n                          Terms and Conditions\n                    </Link>\n                      </Typography>\n                    </Box>\n                    {Boolean(touched.policy && errors.policy) && (\n                      <FormHelperText error>\n                        {errors.policy}\n                      </FormHelperText>\n                    )}\n                    <Box my={2}>\n                      <Button\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        fullWidth\n                        size=\"large\"\n                        type=\"submit\"\n                        variant=\"contained\"\n                      >\n                        Sign up now\n                  </Button>\n                    </Box>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body1\"\n                    >\n                      Have an account?\n                  {' '}\n                      <Link\n                        component={RouterLink}\n                        to=\"/login\"\n                        variant=\"h6\"\n                      >\n                        Sign in\n                  </Link>\n                    </Typography>\n                  </form>\n                )}\n            </Formik>\n          </Container>\n        </Box>\n      </Page>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n\n});\n\nconst mapDispatchToProps = {\n  signUp: actions.SignUp,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterView);\n\n// export default RegisterView;"]},"metadata":{},"sourceType":"module"}